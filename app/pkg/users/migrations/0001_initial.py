# Generated by Django 2.2.6 on 2019-12-18 10:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speciality_part', models.CharField(max_length=2, verbose_name='shorted speciality name')),
                ('year', models.PositiveIntegerField(verbose_name='entry year')),
                ('number', models.PositiveSmallIntegerField(verbose_name='group number')),
            ],
        ),
        migrations.CreateModel(
            name='TgBotInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, null=True, verbose_name="user's telegram first name")),
                ('last_name', models.CharField(max_length=100, null=True, verbose_name="user's telegram last name")),
                ('username', models.CharField(max_length=100, null=True, unique=True, verbose_name="user's telegram username")),
                ('telegram_id', models.PositiveIntegerField(unique=True, verbose_name='telegram user id')),
                ('role', models.CharField(choices=[('student', 'STUDENT'), ('teacher', 'TEACHER')], db_index=True, default='student', max_length=20, verbose_name='role')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='users.Group')),
            ],
            options={
                'verbose_name': 'telegram bot info',
                'verbose_name_plural': 'telegram bot info',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
    ]
